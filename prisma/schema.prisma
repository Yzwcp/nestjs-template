generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//用户表
model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  password  String

  profile   Profile?
  logs      Log[]
  userRoles UserRole[]

  @@map("users")
}

//角色表
model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String

  userRoles UserRole[]

  @@map("roles")
}

//用户角色表 多对多
model UserRole {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  roleId    Int      @map("role_id")
  userId    Int      @map("user_id")

  role Role @relation(fields: [roleId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("user_roles")
}

//个人资料表
model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  age       Int
  email     String
  address   String
  userId    Int      @unique @map("user_id")
  user      User     @relation(fields: [userId], references: [id])

  @@index([email])
  @@map("profiles")
}

//用户操作日志表
model Log {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  path      String
  method    String
  status    Int
  data      String
  ip        String
  code      String
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id])

  @@map("logs")
}
